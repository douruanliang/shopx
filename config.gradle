//先加载config.properties文件
Properties localProperties = new Properties()
try {
    def localFile = project.rootProject.file('config.properties')
    if (localFile != null && localFile.exists()) {
        localProperties.load(localFile.newDataInputStream())
    }
} catch (Exception ignored) {
    println("config.properties not found")
}


def runAsApp = ext.has('runAsApp')
if (runAsApp) {
    runAsApp = ext.runAsApp
} else if (ext.has('mainApp') && ext.mainApp) { //ext.mainApp为true时，代表以app方式运行
    runAsApp = true
} else {
    //build.gradle中没有配置runAsApp，且ext.mainApp=false或未配置
    //再从local.properties中读取配置，例如： demo_component_a=true
    //注：如果采用local.properties读取配置，每次修改需要重新同步(Sync Project)一下
    println("config::::::>"+project.name)
    runAsApp = 'true' == localProperties.getProperty(project.name)
    //设置到ext中，供module的build.gradle使用（例如用于设置sourceSets配置）
    ext.runAsApp = runAsApp
}

println("config::::::>"+runAsApp)
//用来声明这个模块是lib还是单独运行的子模块
if (runAsApp) {
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
} else {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
}



android {
    sourceSets {
        main {
            //默认的作为application运行时Manifest文件路径
            def debugManifest = 'src/main/debug/AndroidManifest.xml'
            if (runAsApp && project.file(debugManifest).exists()) {
                manifest.srcFile debugManifest
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下自动排除debug文件夹中的所有Java文件
                // 可以将debug代码放在这个包内，例如：Application子类
                java {
                    exclude 'debug/**'
                }
            }
            // 注：2018-03-12推荐：将源码放到src/main/debug/java目录下
            if (runAsApp) {
                //debug模式下，如果存在src/main/debug/java，则自动将其添加到java源码目录
                if (project.file('src/main/debug/java').exists()) {
                    java.srcDirs = ['src/main/java', 'src/main/debug/java']
                }
                //debug模式下，如果存在src/main/debug/res，则自动将其添加到资源目录
                if (project.file('src/main/debug/res').exists()) {
                    res.srcDirs = ['src/main/res', 'src/main/debug/res']
                }
            }
        }
    }
}
